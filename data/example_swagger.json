{
  "openapi": "3.0.0",
  "info": {
    "title": "Library Management API",
    "description": "A RESTful API for managing books and users in a library system.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "Books",
      "description": "Operations related to books in the library"
    },
    {
      "name": "Users",
      "description": "Operations related to library users"
    }
  ],
  "paths": {
    "/books": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get all books",
        "description": "Returns a list of all books in the library.",
        "operationId": "getAllBooks",
        "responses": {
          "200": {
            "description": "A list of books.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Add a new book",
        "description": "Adds a new book to the library database.",
        "operationId": "addBook",
        "requestBody": {
          "description": "The book object to be created.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      }
    },
    "/books/{bookId}": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get a book by ID",
        "description": "Returns a single book by its unique ID.",
        "operationId": "getBookById",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "ID of the book to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested book.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found."
          }
        }
      },
      "put": {
        "tags": [
          "Books"
        ],
        "summary": "Update an existing book",
        "description": "Updates the details of a book.",
        "operationId": "updateBook",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "ID of the book to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "The updated book object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book successfully updated."
          },
          "404": {
            "description": "Book not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Books"
        ],
        "summary": "Delete a book",
        "description": "Deletes a book from the library.",
        "operationId": "deleteBook",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "ID of the book to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Book successfully deleted."
          },
          "404": {
            "description": "Book not found."
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add a new user",
        "description": "Creates a new user with the provided details.",
        "operationId": "addUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Book": {
        "type": "object",
        "required": [
          "id",
          "title",
          "author"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier for the book."
          },
          "title": {
            "type": "string",
            "description": "The title of the book."
          },
          "author": {
            "type": "string",
            "description": "The name of the book's author."
          },
          "isAvailable": {
            "type": "boolean",
            "description": "The availability status of the book.",
            "default": true
          }
        }
      },
      "BookCreate": {
        "type": "object",
        "required": [
          "title",
          "author"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the book."
          },
          "author": {
            "type": "string",
            "description": "The name of the book's author."
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "name",
          "email"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier for the user."
          },
          "name": {
            "type": "string",
            "description": "The full name of the user."
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email address of the user."
          }
        }
      },
      "UserCreate": {
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The full name of the user."
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email address of the user."
          }
        }
      }
    }
  }
}